[2025-05-22 20:23:07,028] ERROR [FUNC:- log_exception] 
Traceback (most recent call last):
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 515, in dispatch
    response = self.handle_exception(exc)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 486, in raise_uncaught_exception
    raise exc
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\base\views\create.py", line 129, in create
    obj = self.manager.create(data, many=self.many)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\base\db_access\manager.py", line 343, in create
    return self.model.objects.create(**data)
           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\db\models\query.py", line 661, in create
    obj = self.model(**kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\db\models\base.py", line 545, in __init__
    _setattr(self, field.name, rel_obj)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 288, in __set__
    raise ValueError(
    ...<7 lines>...
    )
ValueError: Cannot assign "UUID('08759db3-aa9c-47c6-9ff0-a88b77e26091')": "Invoice.customer" must be a "Customer" instance.

---------------------------------------------------------------------------------------------------------------------
[2025-05-22 20:34:44,850] ERROR [FUNC:- log_exception] 
Traceback (most recent call last):
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 515, in dispatch
    response = self.handle_exception(exc)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 486, in raise_uncaught_exception
    raise exc
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\base\views\create.py", line 129, in create
    obj = self.manager.create(data, many=self.many)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\base\db_access\manager.py", line 343, in create
    return self.model.objects.create(**data)
           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\db\models\query.py", line 661, in create
    obj = self.model(**kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\db\models\base.py", line 545, in __init__
    _setattr(self, field.name, rel_obj)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 288, in __set__
    raise ValueError(
    ...<7 lines>...
    )
ValueError: Cannot assign "UUID('08759db3-aa9c-47c6-9ff0-a88b77e26091')": "Invoice.customer" must be a "Customer" instance.

---------------------------------------------------------------------------------------------------------------------
[2025-05-23 00:04:54,764] ERROR [FUNC:- log_exception] 
Traceback (most recent call last):
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 515, in dispatch
    response = self.handle_exception(exc)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 486, in raise_uncaught_exception
    raise exc
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\env\Lib\site-packages\rest_framework\views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Invoice Management Django\Backend\invoice-management-backend\base\views\list.py", line 86, in list_all
    objects = self.manager.list(query=query)
              ^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'list'

---------------------------------------------------------------------------------------------------------------------
[2025-06-04 20:39:04,828] ERROR [FUNC:- log_exception] 
Traceback (most recent call last):
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
psycopg2.errors.UndefinedColumn: column customer.customer_type does not exist
LINE 1: ...ustomer"."deleted_dtm", "customer"."customer_id", "customer"...
                                                             ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\views\decorators\csrf.py", line 65, in _view_wrapper
    return view_func(request, *args, **kwargs)
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\rest_framework\viewsets.py", line 125, in view
    return self.dispatch(request, *args, **kwargs)
           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\rest_framework\views.py", line 515, in dispatch
    response = self.handle_exception(exc)
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\rest_framework\views.py", line 475, in handle_exception
    self.raise_uncaught_exception(exc)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\rest_framework\views.py", line 486, in raise_uncaught_exception
    raise exc
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\rest_framework\views.py", line 512, in dispatch
    response = handler(request, *args, **kwargs)
  File "C:\Users\User\OneDrive\Desktop\Project\Transportation Management System\transportation-management-system-backend\base\views\list.py", line 70, in list_all
    "list": self.get_list(objects=objects, request=request),
            ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\OneDrive\Desktop\Project\Transportation Management System\transportation-management-system-backend\invoice\views\invoice.py", line 25, in get_list
    customers_map = customer_manager.get_objects_mapping(
        query={"customer_id__in": customer_ids}, mapping_by="customer_id"
    )
  File "C:\Users\User\OneDrive\Desktop\Project\Transportation Management System\transportation-management-system-backend\base\db_access\manager.py", line 193, in get_objects_mapping
    return {getattr(obj, mapping_by): obj for obj in objects}
                                                     ^^^^^^^
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\models\query.py", line 384, in __iter__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\models\query.py", line 1945, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\models\sql\compiler.py", line 1623, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\User\AppData\Local\Programs\Python\Python313\Lib\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
django.db.utils.ProgrammingError: column customer.customer_type does not exist
LINE 1: ...ustomer"."deleted_dtm", "customer"."customer_id", "customer"...
                                                             ^


---------------------------------------------------------------------------------------------------------------------
